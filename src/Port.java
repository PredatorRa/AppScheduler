import java.time.Period;import java.util.AbstractMap;import java.util.ArrayList;import java.util.List;import java.util.Map;/* * 端口对象，记录出端口的带宽和占用情况 */public class Port {    private final int id;    private final int bandwidth;    private List<TimePeriod> timeLine;    public Port(int id, int bandwidth) {        this.id = id;        this.bandwidth = bandwidth;        this.timeLine = new ArrayList<>();    }    // 初始化端口状态    public void init() {        timeLine.clear();        timeLine.add(new TimePeriod(0,Integer.MAX_VALUE,bandwidth));    }    // 判断当前时间是否可用    public boolean isAvailable(int currentTime,int useWidth) {        //找到当前时间点对应的时间段        TimePeriod timePeriod = findPeriod(currentTime);        //判断当前时间段容量是否够        return timePeriod.getFreeWidth()>=useWidth;    }    // 找到某个时间点对应的时间段    private TimePeriod findPeriod(int currentTime) {        return null;    }    //找到某一个时间点的剩余带宽    public Integer findWidth(int time){        return 0;    }    //找到下一段有空容量的period    public TimePeriod findNextAvailablePeriod(int enterTime, int bandwidth) {        return null;    }    // 发送流    public void send(int currentTime, Port port) {    }    /**     * 绑定将要发送的流,返回发送时间     */    public Integer bond(Flow flow) {        //当前时间段可用        if(isAvailable(flow.getEnterTime(),flow.getBandwidth())){            return flow.getEnterTime();        }        //否则顺延        else{            return 0;        }    }    public int getId() {        return this.id;    }    public int getBandwidth() {        return this.bandwidth;    }    public List<TimePeriod> getTimeLine() {        return timeLine;    }    public void setTimeLine(List<TimePeriod> timeLine) {        this.timeLine = timeLine;    }}